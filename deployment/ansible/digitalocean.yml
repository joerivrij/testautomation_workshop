---
- hosts: local

  vars:
    do_token: "{{ do_token }}"
    number_of_droplets: "{{ number_of_droplets }}"
    docker_compose_version: "{{ docker_compose_version }}"
    docker_compose_previous_version: "{{ docker_compose_previous_version }}" 
   # https://developers.digitalocean.com/documentation/changelog/api-v2/new-size-slugs-for-droplet-plan-changes/
    droplet_size: s-2vcpu-4gb

  tasks:

  - debug: msg="{{ number_of_droplets | int }}"
  
  - name: ensure ssh key exists
    user: >
      name={{ ansible_user_id }}
      generate_ssh_key=yes
      ssh_key_file=/home/joerivrij/.ssh/do/id_rsa
    register: testautomation_key

  - debug: msg="{{ testautomation_key }}"


  - digital_ocean: 
      state=present
      command=ssh
      name=testautomation_key
      ssh_pub_key={{ testautomation_key.ssh_public_key }}
      api_token={{ do_token }}
    register: test_local_ssh_key

  - debug: msg="{{ test_local_ssh_key }}"

  - digital_ocean: 
      state=present
      command=droplet
      name=droplettestauto{{ item }}
      unique_name=yes
      size_id={{ droplet_size }}
      region_id=ams3
      image_id=ubuntu-14-04-x64
      ssh_key_ids={{ test_local_ssh_key.ssh_key.id }}
      api_token={{ do_token }}
    with_sequence: "start=1 count={{number_of_droplets | int }}"
    register: droplet_details

  - name: Add new host to our inventory.
    add_host:
      name: "{{ item.droplet.ip_address }}"
      groups: do
    changed_when: False
    with_items: "{{ droplet_details.results }}"

  - debug: msg="IP of droplet {{item.droplet.name}} = {{ item.droplet.ip_address }}"
    with_items: "{{ droplet_details.results }}"

  - pause:
      seconds: 15

- hosts: do
  remote_user: root
  gather_facts: False

  tasks:
  - name: Creates directory
    file: path=/root/test state=directory
    register: changes_made

  - name: Set authorized key took from file
    authorized_key:
      user: root
      state: present
      key: "{{ lookup('file', '/home/joerivrij/.ssh/id_rsa.pub') }}"

  - name: Upload first docker-compose for host
    copy: 
      src=/home/joerivrij/Projects/qquest/qquest_testautomation_workshop/deployment/ansible/docker-compose1.yml
      dest=/root/test 
      mode=0644

  - command: "ls /root/test"
    register: dir_out

  - debug: msg="{{ dir_out.stdout_lines }}"

  - name: remove possible old versions
    apt:
      name: "{{ item }}"
      state: absent
    with_items:
      - docker
      - docker-engine 
      - docker.io
    become: true
    when: changes_made.changed

  - name: install dependencies
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: present
    with_items:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
      - python-pip
    become: true
    when: changes_made.changed
 
  - name: install python modules (for older versions of OS)
    pip:
      name: "{{item}}"
      state: present
    with_items:
    - urllib3
    - pyOpenSSL
    - ndg-httpsclient
    - pyasn1
    when: changes_made.changed
    
     
  - name: Ubuntu add docker key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    become: true
    when: changes_made.changed
     
  - name: create repo line
    command: bash -c "echo \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" "
    register: docker_repo_line
    when: changes_made.changed
 
 
  - name: add docker repo
    apt_repository:
      repo: "{{ docker_repo_line.stdout }}"
      state: present
    become: true
    changed_when: False
    when: changes_made.changed
      
  - name: install docker ce
    apt:
      name: docker-ce
      state: present
    become: true
    when: changes_made.changed

  - name: Start Docker
    service: name=docker state=restarted

  - name: Installing docker compose
    pip:
      name: docker-compose
      state: present
    when: changes_made.changed

  - command: "docker-compose -f /root/test/docker-compose{{ docker_compose_previous_version | int}}.yml down"
    register: compose_stop

  - debug: msg="{{ compose_stop }}"
  
  - command: "docker-compose -f /root/test/docker-compose{{ docker_compose_version | int}}.yml up -d"
    register: compose_out

  - debug: msg="{{ compose_out }}"